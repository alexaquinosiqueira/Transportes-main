@model Transportadora.UI.Site.ViewModels.BankViewModel
@using Transportadora.UI.Site.ViewModels

@{ ViewData["Title"] = "Edição de Banco"; }


<div class="container-fluid">
    <div class="col-lg-12 col-md-12 col-sm-12 col-sx-12">
        <div class="panel-body">
            <div class="row">
                <div class="pull-right">
                    <a asp-action="Index" data-toggle="tooltip" title="Voltar Para lista" class="btn btn-primary"><i class="fa fa-arrow-left "></i> Voltar</a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-sx-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Editar Banco</h3>
            </div>
            <div class="panel-body">
                <form asp-action="Edit">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        <input asp-for="Description" class="form-control" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                <input asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label asp-for="Code" class="control-label"></label>
                        <select name="Code" id="Code" class="form-control">
                            <option></option>
                            @foreach (var bankaccount in (ViewData["BankAccount"] as List<BankAccountViewModel>))
                            {
                                if (bankaccount.Account == Model.Code)
                                {
                        <option value="@bankaccount.Branch" selected>@bankaccount.Branch - @bankaccount.Description</option> }
                                else
                                {

                        <option value="@bankaccount.Branch">@bankaccount.Branch - @bankaccount.Description</option>}
                            }
                        </select>

                        <span asp-validation-for="Code" class="text-danger"></span>
                    </div>


                    <div class="pull-right">
                        <button type="reset" data-toggle="tooltip" title="Limpar Formulário" class="btn btn-warning">
                            <i class="fa fa-eraser "></i> Limpar
                        </button>
                        <button type="submit" data-toggle="tooltip" title="Atualizar" class="btn btn-primary">
                            <i class="fa fa-save"></i> Atualizar
                        </button>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script type="text/javascript">
    $(document).ready(function () {
        $('select').select2();
        $('.dates').datetimepicker({
            pickTime: false,
            format: 'DD/MM/YYYY'
        });
    });</script>
